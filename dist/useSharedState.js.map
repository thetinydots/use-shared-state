{"version":3,"file":"useSharedState.js","sources":["../src/useSharedState.ts"],"sourcesContent":["import {\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport * as PubSub from \"pubsub-js\";\nconst valuesStore: { [key: string]: any } = {};\n\n/**\n * non-hook function\n * @param key string\n * @param initialValue (optional) initial value\n * @return shared state value\n */\nexport const getOrSetSharedValue = <T = any>(\n  key: string,\n  value?: T\n) => {\n  if (key in valuesStore) {\n    return valuesStore[key] as T;\n  }\n  if (typeof value !== \"undefined\")\n    valuesStore[key] = value;\n  return value as T;\n};\n\n/**\n * @param key string\n * @param value value\n * @return void\n */\nexport function setSharedValue<T = any>(\n  key: string,\n  value: T\n) {\n  valuesStore[key] = value;\n  PubSub.publish(key, value);\n}\n\n/**\n * @param key string\n * @return change state function\n */\nexport function useSharedStateChange<T = any>(\n  key: string\n) {\n  const changeValue = useCallback(\n    (newValue: T) => {\n      PubSub.publish(key, newValue);\n    },\n    [key]\n  );\n\n  return changeValue;\n}\n\n/**\n * @param key string\n * @param initialValue (optional) initial value\n * @return shared state value\n */\nexport function useSharedStateValue<T = any>(\n  key: string,\n  initialValue?: T\n): T {\n  const [value, setValue] = useState<T>(\n    getOrSetSharedValue(key, initialValue)\n  );\n\n  useEffect(() => {\n    const id = PubSub.subscribe(\n      key,\n      (_: string, data: T) => {\n        valuesStore[key] = data;\n        setValue(data);\n      }\n    );\n    return () => PubSub.unsubscribe(id);\n  }, [key, setValue]);\n\n  return value;\n}\n\n/**\n * @param key string\n * @param initialValue (optional) initial value\n * @return shared state value and change state function\n */\nfunction useSharedState<T = any>(\n  key: string,\n  initialValue?: T\n): [T, (newValue: T) => any] {\n  const [value, setValue] = useState<T>(\n    getOrSetSharedValue(key, initialValue)\n  );\n\n  const changeValue = useSharedStateChange(key);\n\n  useEffect(() => {\n    const id = PubSub.subscribe(\n      key,\n      (_: string, data: T) => {\n        // console.log(\"got new value\", key, data);\n        valuesStore[key] = data;\n        setValue(data);\n      }\n    );\n    return () => PubSub.unsubscribe(id);\n  }, [key, setValue]);\n\n  return [value, changeValue];\n}\n\nexport default useSharedState;\n"],"names":["PubSub","useCallback","useState","useEffect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAM,WAAW,GAA2B,EAAE,CAAC;AAE/C;;;;;;IAMa,mBAAmB,GAAG,UACjC,GAAW,EACX,KAAS;IAET,IAAI,GAAG,IAAI,WAAW,EAAE;QACtB,OAAO,WAAW,CAAC,GAAG,CAAM,CAAC;KAC9B;IACD,IAAI,OAAO,KAAK,KAAK,WAAW;QAC9B,WAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC3B,OAAO,KAAU,CAAC;AACpB,EAAE;AAEF;;;;;SAKgB,cAAc,CAC5B,GAAW,EACX,KAAQ;IAER,WAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACzBA,iBAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7B,CAAC;AAED;;;;SAIgB,oBAAoB,CAClC,GAAW;IAEX,IAAM,WAAW,GAAGC,iBAAW,CAC7B,UAAC,QAAW;QACVD,iBAAM,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;KAC/B,EACD,CAAC,GAAG,CAAC,CACN,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC;AAED;;;;;SAKgB,mBAAmB,CACjC,GAAW,EACX,YAAgB;IAEV,IAAA,KAAoBE,cAAQ,CAChC,mBAAmB,CAAC,GAAG,EAAE,YAAY,CAAC,CACvC,EAFM,KAAK,QAAA,EAAE,QAAQ,QAErB,CAAC;IAEFC,eAAS,CAAC;QACR,IAAM,EAAE,GAAGH,iBAAM,CAAC,SAAS,CACzB,GAAG,EACH,UAAC,CAAS,EAAE,IAAO;YACjB,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACxB,QAAQ,CAAC,IAAI,CAAC,CAAC;SAChB,CACF,CAAC;QACF,OAAO,cAAM,OAAAA,iBAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAA,CAAC;KACrC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEpB,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;AAKA,SAAS,cAAc,CACrB,GAAW,EACX,YAAgB;IAEV,IAAA,KAAoBE,cAAQ,CAChC,mBAAmB,CAAC,GAAG,EAAE,YAAY,CAAC,CACvC,EAFM,KAAK,QAAA,EAAE,QAAQ,QAErB,CAAC;IAEF,IAAM,WAAW,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAE9CC,eAAS,CAAC;QACR,IAAM,EAAE,GAAGH,iBAAM,CAAC,SAAS,CACzB,GAAG,EACH,UAAC,CAAS,EAAE,IAAO;;YAEjB,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YACxB,QAAQ,CAAC,IAAI,CAAC,CAAC;SAChB,CACF,CAAC;QACF,OAAO,cAAM,OAAAA,iBAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAA,CAAC;KACrC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEpB,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAC9B;;;;;;;;"}